// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TiendaCodeFirst.Data;

#nullable disable

namespace TiendaCodeFirst.Migrations
{
    [DbContext(typeof(TiendaContext))]
    [Migration("20231106151926_imagenProductoMigration")]
    partial class imagenProductoMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TiendaCodeFirst.Models.Categorias", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategoria"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("IdCategoria");

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            IdCategoria = 1,
                            Descripcion = "Hogar"
                        },
                        new
                        {
                            IdCategoria = 2,
                            Descripcion = "Deporte"
                        },
                        new
                        {
                            IdCategoria = 3,
                            Descripcion = "Tecnología"
                        },
                        new
                        {
                            IdCategoria = 4,
                            Descripcion = "Montaña"
                        });
                });

            modelBuilder.Entity("TiendaCodeFirst.Models.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClienteId"), 1L, 1);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClienteId");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            ClienteId = 1,
                            Nombre = "Cliente1"
                        },
                        new
                        {
                            ClienteId = 2,
                            Nombre = "Cliente3"
                        },
                        new
                        {
                            ClienteId = 3,
                            Nombre = "Cliente4"
                        });
                });

            modelBuilder.Entity("TiendaCodeFirst.Models.LineaPedido", b =>
                {
                    b.Property<int>("LineaPedidoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LineaPedidoId"), 1L, 1);

                    b.Property<int>("PedidoId")
                        .HasColumnType("int");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<int>("Unidades")
                        .HasColumnType("int");

                    b.HasKey("LineaPedidoId");

                    b.HasIndex("PedidoId");

                    b.HasIndex("ProductoId");

                    b.ToTable("LineasPedido");

                    b.HasData(
                        new
                        {
                            LineaPedidoId = 1,
                            PedidoId = 1,
                            ProductoId = 1,
                            Unidades = 10
                        },
                        new
                        {
                            LineaPedidoId = 2,
                            PedidoId = 2,
                            ProductoId = 2,
                            Unidades = 4
                        });
                });

            modelBuilder.Entity("TiendaCodeFirst.Models.LogPedidosProductos", b =>
                {
                    b.Property<int>("IdLog")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLog"), 1L, 1);

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductoPedidoName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdLog");

                    b.HasIndex("IdProducto");

                    b.ToTable("Logs");

                    b.HasData(
                        new
                        {
                            IdLog = 1,
                            Cantidad = 10,
                            Categoria = "Tecnología",
                            FechaRegistro = new DateTime(2023, 11, 6, 15, 19, 25, 782, DateTimeKind.Utc).AddTicks(9230),
                            IdProducto = 2,
                            Marca = "Samsung",
                            ProductoPedidoName = "Portátiles"
                        },
                        new
                        {
                            IdLog = 2,
                            Cantidad = 5,
                            Categoria = "Deporte",
                            FechaRegistro = new DateTime(2023, 11, 6, 15, 19, 25, 782, DateTimeKind.Utc).AddTicks(9234),
                            IdProducto = 6,
                            Marca = "Nike",
                            ProductoPedidoName = "Zapatos"
                        },
                        new
                        {
                            IdLog = 3,
                            Cantidad = 5,
                            Categoria = "Montaña",
                            FechaRegistro = new DateTime(2023, 11, 6, 15, 19, 25, 782, DateTimeKind.Utc).AddTicks(9235),
                            IdProducto = 3,
                            Marca = "Decathlon",
                            ProductoPedidoName = "Tienda Campaña"
                        });
                });

            modelBuilder.Entity("TiendaCodeFirst.Models.Marcas", b =>
                {
                    b.Property<int>("IdMarca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMarca"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("IdMarca");

                    b.ToTable("Marcas");

                    b.HasData(
                        new
                        {
                            IdMarca = 1,
                            Descripcion = "HP"
                        },
                        new
                        {
                            IdMarca = 2,
                            Descripcion = "Samsung"
                        },
                        new
                        {
                            IdMarca = 3,
                            Descripcion = "NIKE"
                        },
                        new
                        {
                            IdMarca = 4,
                            Descripcion = "Decathlon"
                        },
                        new
                        {
                            IdMarca = 5,
                            Descripcion = "Casio"
                        },
                        new
                        {
                            IdMarca = 6,
                            Descripcion = "Leroy Merlin"
                        },
                        new
                        {
                            IdMarca = 7,
                            Descripcion = "Auchan"
                        });
                });

            modelBuilder.Entity("TiendaCodeFirst.Models.Modelos", b =>
                {
                    b.Property<int>("IdModelo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdModelo"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdModelo");

                    b.ToTable("Modelos");

                    b.HasData(
                        new
                        {
                            IdModelo = 1,
                            Descripcion = "HP Spectre"
                        },
                        new
                        {
                            IdModelo = 2,
                            Descripcion = "HP Pavilion"
                        },
                        new
                        {
                            IdModelo = 3,
                            Descripcion = "HP Envy"
                        },
                        new
                        {
                            IdModelo = 4,
                            Descripcion = "Galaxy Note"
                        },
                        new
                        {
                            IdModelo = 5,
                            Descripcion = "Galaxy Z Flip"
                        },
                        new
                        {
                            IdModelo = 6,
                            Descripcion = "Galaxy S"
                        },
                        new
                        {
                            IdModelo = 7,
                            Descripcion = "Galaxy A"
                        },
                        new
                        {
                            IdModelo = 8,
                            Descripcion = "Casio FX-991SPX"
                        },
                        new
                        {
                            IdModelo = 9,
                            Descripcion = "Casio fx-82MS"
                        },
                        new
                        {
                            IdModelo = 10,
                            Descripcion = "Leggins"
                        },
                        new
                        {
                            IdModelo = 11,
                            Descripcion = "Pantalón mom jean"
                        },
                        new
                        {
                            IdModelo = 12,
                            Descripcion = "Pantalón joggers"
                        },
                        new
                        {
                            IdModelo = 13,
                            Descripcion = "cuello redondo"
                        },
                        new
                        {
                            IdModelo = 14,
                            Descripcion = "cuello ancho"
                        },
                        new
                        {
                            IdModelo = 15,
                            Descripcion = "polos"
                        },
                        new
                        {
                            IdModelo = 16,
                            Descripcion = "Nike Air Max 95 Ultra"
                        },
                        new
                        {
                            IdModelo = 17,
                            Descripcion = "Nike Go FlyEase"
                        },
                        new
                        {
                            IdModelo = 18,
                            Descripcion = "Nike Wearallday"
                        },
                        new
                        {
                            IdModelo = 19,
                            Descripcion = "ADIDAS N-5923"
                        },
                        new
                        {
                            IdModelo = 20,
                            Descripcion = "ADIDAS NMD"
                        },
                        new
                        {
                            IdModelo = 21,
                            Descripcion = "ADIDAS SWIFT RUN"
                        },
                        new
                        {
                            IdModelo = 22,
                            Descripcion = "ADIDAS I-5923"
                        },
                        new
                        {
                            IdModelo = 23,
                            Descripcion = "ADIDAS YUNG 96"
                        },
                        new
                        {
                            IdModelo = 24,
                            Descripcion = "ADIDAS FALCON"
                        },
                        new
                        {
                            IdModelo = 25,
                            Descripcion = "ADIDAS AS 520"
                        },
                        new
                        {
                            IdModelo = 26,
                            Descripcion = "ADIDAS ZX 2K BOOST"
                        },
                        new
                        {
                            IdModelo = 27,
                            Descripcion = "ADIDAS NMD V3"
                        },
                        new
                        {
                            IdModelo = 28,
                            Descripcion = "ADIDAS ZX22"
                        },
                        new
                        {
                            IdModelo = 29,
                            Descripcion = "ADIDAS ADI2000 X"
                        });
                });

            modelBuilder.Entity("TiendaCodeFirst.Models.Objetos", b =>
                {
                    b.Property<int>("IdObjeto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdObjeto"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("IdObjeto");

                    b.ToTable("Objetos");

                    b.HasData(
                        new
                        {
                            IdObjeto = 1,
                            Descripcion = "Movil"
                        },
                        new
                        {
                            IdObjeto = 2,
                            Descripcion = "Portátiles"
                        },
                        new
                        {
                            IdObjeto = 3,
                            Descripcion = "Tienda Campaña"
                        },
                        new
                        {
                            IdObjeto = 4,
                            Descripcion = "Mesas"
                        },
                        new
                        {
                            IdObjeto = 5,
                            Descripcion = "Zapatillas"
                        });
                });

            modelBuilder.Entity("TiendaCodeFirst.Models.Pedido", b =>
                {
                    b.Property<int>("PedidoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PedidoId"), 1L, 1);

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.HasKey("PedidoId");

                    b.HasIndex("ClienteId");

                    b.ToTable("Pedidos");

                    b.HasData(
                        new
                        {
                            PedidoId = 1,
                            ClienteId = 1,
                            FechaCreacion = new DateTime(2023, 11, 6, 15, 19, 25, 782, DateTimeKind.Utc).AddTicks(8817)
                        },
                        new
                        {
                            PedidoId = 2,
                            ClienteId = 2,
                            FechaCreacion = new DateTime(2023, 11, 6, 15, 19, 25, 782, DateTimeKind.Utc).AddTicks(8821)
                        });
                });

            modelBuilder.Entity("TiendaCodeFirst.Models.Producto", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProducto"), 1L, 1);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("DescripcionComercial")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DescripcionTecnica")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("FechaAlta")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<int>("IdMarca")
                        .HasColumnType("int");

                    b.Property<int>("IdModelo")
                        .HasColumnType("int");

                    b.Property<int>("IdObjeto")
                        .HasColumnType("int");

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Iva")
                        .HasColumnType("int");

                    b.Property<double>("Pvp")
                        .HasColumnType("float");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<int>("StockMinimo")
                        .HasColumnType("int");

                    b.HasKey("IdProducto");

                    b.HasIndex("IdCategoria");

                    b.HasIndex("IdMarca");

                    b.HasIndex("IdModelo")
                        .IsUnique();

                    b.HasIndex("IdObjeto");

                    b.ToTable("Productos");

                    b.HasData(
                        new
                        {
                            IdProducto = 1,
                            Activo = true,
                            DescripcionComercial = "Mi descripcion Comercial",
                            DescripcionTecnica = "Mi descripcion Tecnica",
                            FechaAlta = new DateTime(2023, 11, 6, 15, 19, 25, 782, DateTimeKind.Utc).AddTicks(8880),
                            FechaModificacion = new DateTime(2023, 11, 6, 15, 19, 25, 782, DateTimeKind.Utc).AddTicks(8881),
                            IdCategoria = 1,
                            IdMarca = 1,
                            IdModelo = 1,
                            IdObjeto = 1,
                            Imagen = "imagen1.png",
                            Iva = 15,
                            Pvp = 5.0,
                            Stock = 4,
                            StockMinimo = 7
                        },
                        new
                        {
                            IdProducto = 2,
                            Activo = false,
                            DescripcionComercial = "Mi descripcion Comercial",
                            DescripcionTecnica = "Mi descripcion Tecnica",
                            FechaAlta = new DateTime(2023, 11, 6, 15, 19, 25, 782, DateTimeKind.Utc).AddTicks(8886),
                            FechaModificacion = new DateTime(2023, 11, 6, 15, 19, 25, 782, DateTimeKind.Utc).AddTicks(8887),
                            IdCategoria = 2,
                            IdMarca = 2,
                            IdModelo = 2,
                            IdObjeto = 2,
                            Imagen = "imagen2.png",
                            Iva = 9,
                            Pvp = 3.0,
                            Stock = 4,
                            StockMinimo = 2
                        },
                        new
                        {
                            IdProducto = 3,
                            Activo = true,
                            DescripcionComercial = "Tiene un capacidad de dos personas, ideal para campementos....",
                            DescripcionTecnica = "Tiene un volumen de 5 cubicos, guia de motaje fácil.... ",
                            FechaAlta = new DateTime(2023, 11, 6, 15, 19, 25, 782, DateTimeKind.Utc).AddTicks(8890),
                            FechaModificacion = new DateTime(2023, 11, 6, 15, 19, 25, 782, DateTimeKind.Utc).AddTicks(8890),
                            IdCategoria = 3,
                            IdMarca = 3,
                            IdModelo = 3,
                            IdObjeto = 3,
                            Imagen = "imagen3.png",
                            Iva = 7,
                            Pvp = 12.0,
                            Stock = 4,
                            StockMinimo = 2
                        },
                        new
                        {
                            IdProducto = 4,
                            Activo = true,
                            DescripcionComercial = "Te lo puedes llevar a la montaña de vacaciones a otras ciudades...",
                            DescripcionTecnica = "Producto de laraga duracion que tiene mucha autonomia y de las mejores prestaciones tecnologicas ",
                            FechaAlta = new DateTime(2023, 11, 6, 15, 19, 25, 782, DateTimeKind.Utc).AddTicks(8893),
                            FechaModificacion = new DateTime(2023, 11, 6, 15, 19, 25, 782, DateTimeKind.Utc).AddTicks(8893),
                            IdCategoria = 4,
                            IdMarca = 4,
                            IdModelo = 4,
                            IdObjeto = 4,
                            Imagen = "imagen4.png",
                            Iva = 3,
                            Pvp = 2.0,
                            Stock = 4,
                            StockMinimo = 3
                        },
                        new
                        {
                            IdProducto = 5,
                            Activo = true,
                            DescripcionComercial = "Todos los clientes esstan muy satisfechos con el producto, algunos hasta consideran que tiene demasiona para lo que es....",
                            DescripcionTecnica = "Este producto ofrece todas las mejores prestaciones de la tecnología actual....",
                            FechaAlta = new DateTime(2023, 11, 6, 15, 19, 25, 782, DateTimeKind.Utc).AddTicks(8896),
                            FechaModificacion = new DateTime(2023, 11, 6, 15, 19, 25, 782, DateTimeKind.Utc).AddTicks(8896),
                            IdCategoria = 3,
                            IdMarca = 5,
                            IdModelo = 5,
                            IdObjeto = 4,
                            Imagen = "imagen5.png",
                            Iva = 22,
                            Pvp = 2.0,
                            Stock = 4,
                            StockMinimo = 6
                        },
                        new
                        {
                            IdProducto = 6,
                            Activo = true,
                            DescripcionComercial = "Folios de papel blancos para imprimir de oficiona de 80 g de grosor....",
                            DescripcionTecnica = "Folios de papel blancos para imprimir, colegio, hacer manualidades....  ",
                            FechaAlta = new DateTime(2023, 11, 6, 15, 19, 25, 782, DateTimeKind.Utc).AddTicks(8899),
                            FechaModificacion = new DateTime(2023, 11, 6, 15, 19, 25, 782, DateTimeKind.Utc).AddTicks(8899),
                            IdCategoria = 1,
                            IdMarca = 7,
                            IdModelo = 6,
                            IdObjeto = 4,
                            Imagen = "imagen6.png",
                            Iva = 15,
                            Pvp = 2.0,
                            Stock = 4,
                            StockMinimo = 2
                        });
                });

            modelBuilder.Entity("TiendaCodeFirst.Models.Recepcion", b =>
                {
                    b.Property<int>("Referencia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Referencia"), 1L, 1);

                    b.Property<int>("CantidadPedida")
                        .HasColumnType("int");

                    b.Property<int>("CantidadRecibida")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<int>("IdProvedor")
                        .HasColumnType("int");

                    b.HasKey("Referencia");

                    b.HasIndex("IdProducto");

                    b.ToTable("Recepciones");

                    b.HasData(
                        new
                        {
                            Referencia = 1,
                            CantidadPedida = 15,
                            CantidadRecibida = 15,
                            Fecha = new DateTime(2023, 11, 6, 15, 19, 25, 782, DateTimeKind.Utc).AddTicks(9361),
                            IdProducto = 1,
                            IdProvedor = 1
                        },
                        new
                        {
                            Referencia = 2,
                            CantidadPedida = 15,
                            CantidadRecibida = 15,
                            Fecha = new DateTime(2023, 11, 6, 15, 19, 25, 782, DateTimeKind.Utc).AddTicks(9363),
                            IdProducto = 2,
                            IdProvedor = 2
                        },
                        new
                        {
                            Referencia = 3,
                            CantidadPedida = 40,
                            CantidadRecibida = 40,
                            Fecha = new DateTime(2023, 11, 6, 15, 19, 25, 782, DateTimeKind.Utc).AddTicks(9364),
                            IdProducto = 2,
                            IdProvedor = 3
                        },
                        new
                        {
                            Referencia = 4,
                            CantidadPedida = 60,
                            CantidadRecibida = 60,
                            Fecha = new DateTime(2023, 11, 6, 15, 19, 25, 782, DateTimeKind.Utc).AddTicks(9365),
                            IdProducto = 2,
                            IdProvedor = 4
                        },
                        new
                        {
                            Referencia = 5,
                            CantidadPedida = 80,
                            CantidadRecibida = 80,
                            Fecha = new DateTime(2023, 11, 6, 15, 19, 25, 782, DateTimeKind.Utc).AddTicks(9366),
                            IdProducto = 3,
                            IdProvedor = 4
                        },
                        new
                        {
                            Referencia = 6,
                            CantidadPedida = 25,
                            CantidadRecibida = 25,
                            Fecha = new DateTime(2023, 11, 6, 15, 19, 25, 782, DateTimeKind.Utc).AddTicks(9367),
                            IdProducto = 4,
                            IdProvedor = 5
                        },
                        new
                        {
                            Referencia = 7,
                            CantidadPedida = 40,
                            CantidadRecibida = 40,
                            Fecha = new DateTime(2023, 11, 6, 15, 19, 25, 782, DateTimeKind.Utc).AddTicks(9368),
                            IdProducto = 4,
                            IdProvedor = 6
                        });
                });

            modelBuilder.Entity("TiendaCodeFirst.Models.Ventas", b =>
                {
                    b.Property<int>("IdVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVenta"), 1L, 1);

                    b.Property<int>("Descuento")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaVenta")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<double>("Importe")
                        .HasColumnType("float");

                    b.Property<double>("PvpUnitario")
                        .HasColumnType("float");

                    b.Property<int>("UnidadesVenta")
                        .HasColumnType("int");

                    b.HasKey("IdVenta");

                    b.HasIndex("IdProducto");

                    b.ToTable("Ventas");

                    b.HasData(
                        new
                        {
                            IdVenta = 1,
                            Descuento = 3,
                            FechaVenta = new DateTime(2023, 11, 6, 15, 19, 25, 782, DateTimeKind.Utc).AddTicks(9295),
                            IdProducto = 3,
                            Importe = 23.449999999999999,
                            PvpUnitario = 30.25,
                            UnidadesVenta = 40
                        },
                        new
                        {
                            IdVenta = 2,
                            Descuento = 15,
                            FechaVenta = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdProducto = 4,
                            Importe = 17.989999999999998,
                            PvpUnitario = 20.5,
                            UnidadesVenta = 20
                        },
                        new
                        {
                            IdVenta = 3,
                            Descuento = 21,
                            FechaVenta = new DateTime(2023, 11, 6, 15, 19, 25, 782, DateTimeKind.Utc).AddTicks(9298),
                            IdProducto = 2,
                            Importe = 30.600000000000001,
                            PvpUnitario = 38.5,
                            UnidadesVenta = 15
                        },
                        new
                        {
                            IdVenta = 4,
                            Descuento = 5,
                            FechaVenta = new DateTime(2023, 11, 6, 15, 19, 25, 782, DateTimeKind.Utc).AddTicks(9299),
                            IdProducto = 5,
                            Importe = 28.399999999999999,
                            PvpUnitario = 30.25,
                            UnidadesVenta = 120
                        },
                        new
                        {
                            IdVenta = 5,
                            Descuento = 7,
                            FechaVenta = new DateTime(2023, 11, 6, 15, 19, 25, 782, DateTimeKind.Utc).AddTicks(9300),
                            IdProducto = 1,
                            Importe = 15.199999999999999,
                            PvpUnitario = 18.75,
                            UnidadesVenta = 45
                        },
                        new
                        {
                            IdVenta = 6,
                            Descuento = 9,
                            FechaVenta = new DateTime(2023, 11, 6, 15, 19, 25, 782, DateTimeKind.Utc).AddTicks(9301),
                            IdProducto = 3,
                            Importe = 29.600000000000001,
                            PvpUnitario = 33.659999999999997,
                            UnidadesVenta = 66
                        });
                });

            modelBuilder.Entity("TiendaCodeFirst.Models.LineaPedido", b =>
                {
                    b.HasOne("TiendaCodeFirst.Models.Pedido", null)
                        .WithMany("Lineas")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TiendaCodeFirst.Models.Producto", null)
                        .WithMany("Lineas")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TiendaCodeFirst.Models.LogPedidosProductos", b =>
                {
                    b.HasOne("TiendaCodeFirst.Models.Producto", "ProductoPedido")
                        .WithMany()
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductoPedido");
                });

            modelBuilder.Entity("TiendaCodeFirst.Models.Pedido", b =>
                {
                    b.HasOne("TiendaCodeFirst.Models.Cliente", null)
                        .WithMany("Pedidos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TiendaCodeFirst.Models.Producto", b =>
                {
                    b.HasOne("TiendaCodeFirst.Models.Categorias", "Categoria")
                        .WithMany()
                        .HasForeignKey("IdCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TiendaCodeFirst.Models.Marcas", "Marca")
                        .WithMany()
                        .HasForeignKey("IdMarca")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TiendaCodeFirst.Models.Modelos", "Modelo")
                        .WithMany()
                        .HasForeignKey("IdModelo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TiendaCodeFirst.Models.Objetos", "Objeto")
                        .WithMany()
                        .HasForeignKey("IdObjeto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Marca");

                    b.Navigation("Modelo");

                    b.Navigation("Objeto");
                });

            modelBuilder.Entity("TiendaCodeFirst.Models.Recepcion", b =>
                {
                    b.HasOne("TiendaCodeFirst.Models.Producto", "ProductoRecepcion")
                        .WithMany()
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductoRecepcion");
                });

            modelBuilder.Entity("TiendaCodeFirst.Models.Ventas", b =>
                {
                    b.HasOne("TiendaCodeFirst.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("TiendaCodeFirst.Models.Cliente", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("TiendaCodeFirst.Models.Pedido", b =>
                {
                    b.Navigation("Lineas");
                });

            modelBuilder.Entity("TiendaCodeFirst.Models.Producto", b =>
                {
                    b.Navigation("Lineas");
                });
#pragma warning restore 612, 618
        }
    }
}
